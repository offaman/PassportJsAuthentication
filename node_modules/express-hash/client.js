const elliptic = require('elliptic');
const crypto = require('crypto');
const defaults=require('./defaults.json');

const EdDSA = elliptic.eddsa;
const ec = new EdDSA('ed25519');

const sign = (options =defaults)  => {
    try {
        let message = {};
        message.query=options.data.query;
        message.body=options.data.body;
        if(options.method=='GET'){
            message.query.time= new Date().getTime();
        }
        if(options.method!=='GET'){
            message.body.time=new Date().getTime();
        }
        const shaMsg = crypto.createHash(options.algorithm).update(JSON.stringify(message)).digest('hex');
        const signature = ec.sign(shaMsg, options.hashKey).toHex();
        return signature;
    } catch (err) {
        throw new Error("Error in creating hash");

    }
}

module.exports = { sign }



